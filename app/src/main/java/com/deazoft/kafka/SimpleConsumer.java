/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.deazoft.kafka;

import io.confluent.kafka.serializers.json.KafkaJsonSchemaDeserializer;
import org.apache.kafka.clients.consumer.ConsumerConfig;
import org.apache.kafka.common.serialization.StringDeserializer;
import org.reactivestreams.Publisher;
import reactor.core.publisher.Flux;
import reactor.kafka.receiver.KafkaReceiver;
import reactor.kafka.receiver.ReceiverOptions;
import reactor.kafka.receiver.ReceiverRecord;

import java.util.Arrays;
import java.util.Properties;

public class SimpleConsumer {

    public static Publisher<ReceiverRecord<StringDeserializer, KafkaJsonSchemaDeserializer>> build(
            String servers, String clientId, String groupId, String... topics) {
        final var props = new Properties();;
        props.put("bootstrap.servers", servers);

        props.put(ConsumerConfig.GROUP_ID_CONFIG, groupId);
        props.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class);
        props.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, KafkaJsonSchemaDeserializer.class);
        props.put("schema.registry.url","http://127.0.0.1:8081");
        props.put("auto.offset.reset", "earliest");

        final var receiverOptions =
                ReceiverOptions.<StringDeserializer, KafkaJsonSchemaDeserializer>create(props);

        final var opts = receiverOptions.subscription(Arrays.asList(topics));
        return KafkaReceiver.create(opts).receive();
    }
    public static void main(String[] args) {
        Flux.from(build("localhost:9092", "clientJd", "groupIdJd", "multiple"))
                .doOnError(throwable -> System.out.println(String.format("Error %s", throwable.toString())))
                .subscribe(System.out::println);
    }
}
